/** Declaration file generated by dts-gen */

export class System {
    constructor(...args: any[]);

    createRuntime(...args: any[]): void;

    createUser(...args: any[]): void;

    getGenerators(...args: any[]): void;

    getUser(...args: any[]): void;

    hasUser(...args: any[]): void;

    inject(...args: any[]): void;

    registerCanonicalGenerator(...args: any[]): void;

    registerGenerator(...args: any[]): void;

    registerNOSProgram(...args: any[]): void;

    removeUser(...args: any[]): void;

}

export class UserSystem {
    constructor(...args: any[]);

    UIHandler(...args: any[]): void;

    addBlockType(...args: any[]): void;

    addDirection(...args: any[]): void;

    addPosition(...args: any[]): void;

    execl(...args: any[]): void;

    execv(...args: any[]): void;

    exit(...args: any[]): void;

    generate(...args: any[]): void;

    getCurrentGeneratorName(...args: any[]): void;

    getCurrentState(...args: any[]): void;

    getCurrentUI(...args: any[]): void;

    init(...args: any[]): void;

    isValidParameter(...args: any[]): void;

    nextGenerator(...args: any[]): void;

    perviousGenerator(...args: any[]): void;

    removeBlockType(...args: any[]): void;

    removeDirection(...args: any[]): void;

    removePosition(...args: any[]): void;

    runNOS(...args: any[]): void;

    useItem(...args: any[]): void;

}

export function Block(...args: any[]): void;

export function BlockType(...args: any[]): void;

export function BuildInstruction(...args: any[]): void;

export function Coordinate(...args: any[]): void;

export function Description(...args: any[]): void;

export function Direction(...args: any[]): void;

export function Generator(...args: any[]): void;

export function Position(...args: any[]): void;

export function Usage(...args: any[]): void;

export function canonicalGeneratorFactory({
    description,

    criteria: {
        positionArrayLength,

        blockTypeArrayLength,

        directionArrayLength
    },
    option,

    method: {
        generate, UIHandler
    }
}: any): any;

export namespace emptyPlatform {
    function use(...args: any[]): void;

}

